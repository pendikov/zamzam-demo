//
//  ZZBlocksPresenter.swift
//  ZamZamDemo
//
//  Created Daniil Pendikov on 10/11/2018.
//  Copyright © 2018 Daniil Pendikov. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class ZZBlocksPresenter: ZZBlocksPresenterProtocol {

    weak private var view: ZZBlocksViewProtocol?
    var interactor: ZZBlocksInteractorProtocol?
    private let router: ZZBlocksWireframeProtocol

    init(interface: ZZBlocksViewProtocol, interactor: ZZBlocksInteractorProtocol?, router: ZZBlocksWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func start() {
        self.view?.isLoading = true
        self.interactor?.start()
    }
    
    func add(blocks: [ZZBlock]) {
        DispatchQueue.main.async {
            self.view?.isLoading = false
            self.view?.add(blocks: blocks)
        }
    }
    
    func show(block: ZZBlock) {
        guard let blockchain = self.interactor?.blockchain else {
            return
        }
        self.router.show(block: block, blockchain: blockchain)
    }

}
