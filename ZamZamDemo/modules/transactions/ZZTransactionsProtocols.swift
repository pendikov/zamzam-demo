//
//  ZZTransactionsProtocols.swift
//  ZamZamDemo
//
//  Created Daniil Pendikov on 09/11/2018.
//  Copyright © 2018 Daniil Pendikov. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation

//Protocols for VIPER

//MARK: Wireframe -
protocol ZZTransactionsWireframeProtocol: class {
    func show(transaction: ZZTransaction, blockchain: ZZBlockchainService)
}
//MARK: Presenter -
protocol ZZTransactionsPresenterProtocol: class {
    func start()
    func add(transaction: ZZTransaction)
    func removeLastAndAdd(transaction: ZZTransaction)
    func show(transaction: ZZTransaction)
}

//MARK: Interactor -
protocol ZZTransactionsInteractorProtocol: class {
    
    var presenter: ZZTransactionsPresenterProtocol?  { get set }
    
    var blockchain: ZZBlockchainService? { get set }
    func allTransactions() -> [ZZTransaction]
    func start()
}

//MARK: View -
protocol ZZTransactionsViewProtocol: class {
    
    var presenter: ZZTransactionsPresenterProtocol?  { get set }
    func add(transaction: ZZTransaction)
    func removeLastAndAdd(transaction: ZZTransaction)
    func reloadAll(transactions: [ZZTransaction])
    
    var isLoading: Bool { get set }
}
